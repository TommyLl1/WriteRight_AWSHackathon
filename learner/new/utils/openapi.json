{
    "openapi": "3.1.0",
    "info": {
        "title": "WriteRight API",
        "description": "API for WriteRight application",
        "version": "0.0.1"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Login with email and password.",
                "operationId": "login_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "description": "Logout the user by invalidating the session.",
                "operationId": "logout_auth_logout_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/game/start/{userId}": {
            "get": {
                "tags": [
                    "Game"
                ],
                "summary": "Start Game",
                "description": "Starts a new game session for the specified user.\n\nArgs:\n    userId (UUIDStr): The unique identifier of the user.\n    qCount (int, optional): The number of questions to generate for the game. Defaults to 1.\n    question_generator (QuestionService): Dependency injection for the question generator service.\n    game_service (GameService): Dependency injection for the game service.\n\nReturns:\n    GameObject: An object containing the generated questions, game ID, user ID, and timestamp.\n\nRaises:\n    HTTPException: If there is an error generating questions or creating the game session.",
                "operationId": "start_game_game_start__userId__get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Userid"
                        }
                    },
                    {
                        "name": "qCount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Qcount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GameObject-Output"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/submit-result": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "Submit Result",
                "description": "Submits the game results for the specified user and game.",
                "operationId": "submit_result_game_submit_result_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameObject-Input"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GameData"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/flag-questions": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "Flag Question",
                "description": "Endpoint to flag a problematic question for manual review.",
                "operationId": "flag_question_game_flag_questions_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlagQuestionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagQuestionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/tasks/current": {
            "get": {
                "tags": [
                    "User",
                    "User Tasks"
                ],
                "summary": "Get Current Tasks",
                "description": "Get the current valid tasks for the user (auto-creates today's daily task if needed).",
                "operationId": "get_current_tasks_user_tasks_current_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    },
                                    "title": "Response Get Current Tasks User Tasks Current Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/tasks/progress": {
            "post": {
                "tags": [
                    "User",
                    "User Tasks"
                ],
                "summary": "Set Task Progress",
                "description": "Update a task's progress for the user and grant XP if completed using the RPC.",
                "operationId": "set_task_progress_user_tasks_progress_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetTaskProgressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetTaskProgressResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/wrong-words": {
            "get": {
                "tags": [
                    "User",
                    "Wrong Words"
                ],
                "summary": "Get User Wrong Word Dictionary",
                "description": "Fetches the user's wrong word dictionary.",
                "operationId": "get_user_wrong_word_dictionary_user_wrong_words_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    },
                    {
                        "name": "no_paging",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "No Paging"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserWrongWordsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User",
                    "Wrong Words"
                ],
                "summary": "User Add Wrong Word",
                "description": "Endpoint to add a wrong word for a user.\n\nNote: This part is in testing, real one should be done with scanning function",
                "operationId": "user_add_wrong_word_user_wrong_words_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddWrongWordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddWrongWordResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/wrong-words/count": {
            "get": {
                "tags": [
                    "User",
                    "Wrong Words"
                ],
                "summary": "Get the count of wrong words for a user",
                "description": "Fetches the count of wrong words for a user.",
                "operationId": "get_user_wrong_word_count_user_wrong_words_count_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Get User Wrong Word Count User Wrong Words Count Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "description": "Fetches the user profile by user ID.\nSupposed to be more detailed than the condensed version.\nMay include extra things e.g. user settings, preferences, etc. later on.",
                "operationId": "get_user_profile_user_profile_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register User",
                "description": "Registers a new user in the system.",
                "operationId": "register_user_user_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/status": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Status",
                "description": "Fetches the user's status including level and experience points.\nThis is a condensed version of the user profile.",
                "operationId": "get_user_status_user_status_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condensedUser"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/settings": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Settings",
                "description": "Retrieves the user's settings from the user_settings table.",
                "operationId": "get_user_settings_user_settings_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSettings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update User Settings",
                "description": "Updates the user's settings in the user_settings table.",
                "operationId": "update_user_settings_user_settings_post",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserSettingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSettings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testing/check-answer": {
            "post": {
                "tags": [
                    "Testing"
                ],
                "summary": "Upload File",
                "operationId": "upload_file_testing_check_answer_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_testing_check_answer_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckHandwriteAnswerResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testing/auth-template": {
            "get": {
                "tags": [
                    "Testing"
                ],
                "summary": "Get Data",
                "operationId": "get_data_testing_auth_template_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthTemplateResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Read Root",
                "operationId": "read_root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health Check",
                "description": "Health check endpoint to verify the API is running.",
                "operationId": "health_check_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddWrongWordRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "word": {
                        "type": "string",
                        "title": "Word"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "word"
                ],
                "title": "AddWrongWordRequest"
            },
            "AddWrongWordResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PastWrongWord"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "data"
                ],
                "title": "AddWrongWordResponse"
            },
            "AnswerHandwrite": {
                "properties": {
                    "time_limit": {
                        "type": "integer",
                        "title": "Time Limit",
                        "default": 0
                    },
                    "handwrite_target": {
                        "type": "string",
                        "title": "Handwrite Target"
                    },
                    "submit_url": {
                        "type": "string",
                        "title": "Submit Url"
                    },
                    "background_image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Background Image"
                    },
                    "submitted_image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Submitted Image"
                    },
                    "is_correct": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Correct"
                    }
                },
                "type": "object",
                "required": [
                    "handwrite_target",
                    "submit_url"
                ],
                "title": "AnswerHandwrite"
            },
            "AnswerMultiChoice-Input": {
                "properties": {
                    "time_limit": {
                        "type": "integer",
                        "title": "Time Limit",
                        "default": 0
                    },
                    "min_choices": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Min Choices",
                        "description": "Minimum number of choices to select",
                        "default": 1
                    },
                    "max_choices": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Max Choices",
                        "description": "Maximum number of choices to select",
                        "default": 1
                    },
                    "choices": {
                        "items": {
                            "$ref": "#/components/schemas/MultiChoiceOption"
                        },
                        "type": "array",
                        "title": "Choices"
                    },
                    "strict_order": {
                        "type": "boolean",
                        "title": "Strict Order",
                        "description": "If the order of choices matters",
                        "default": false
                    },
                    "randomize": {
                        "type": "boolean",
                        "title": "Randomize",
                        "description": "If the choices should be placed randomized",
                        "default": true
                    },
                    "display": {
                        "$ref": "#/components/schemas/MultiChoiceDisplay"
                    },
                    "answers": {
                        "items": {
                            "$ref": "#/components/schemas/MultiChoiceAnswer"
                        },
                        "type": "array",
                        "title": "Answers"
                    },
                    "submitted_answers": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MultiChoiceAnswer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Submitted Answers"
                    }
                },
                "type": "object",
                "required": [
                    "choices",
                    "display",
                    "answers"
                ],
                "title": "AnswerMultiChoice"
            },
            "AnswerMultiChoice-Output": {
                "properties": {
                    "time_limit": {
                        "type": "integer",
                        "title": "Time Limit",
                        "default": 0
                    },
                    "min_choices": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Min Choices",
                        "description": "Minimum number of choices to select",
                        "default": 1
                    },
                    "max_choices": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Max Choices",
                        "description": "Maximum number of choices to select",
                        "default": 1
                    },
                    "choices": {
                        "items": {
                            "$ref": "#/components/schemas/MultiChoiceOption"
                        },
                        "type": "array",
                        "title": "Choices"
                    },
                    "strict_order": {
                        "type": "boolean",
                        "title": "Strict Order",
                        "description": "If the order of choices matters",
                        "default": false
                    },
                    "randomize": {
                        "type": "boolean",
                        "title": "Randomize",
                        "description": "If the choices should be placed randomized",
                        "default": true
                    },
                    "display": {
                        "$ref": "#/components/schemas/MultiChoiceDisplay"
                    },
                    "answers": {
                        "items": {
                            "$ref": "#/components/schemas/MultiChoiceAnswer"
                        },
                        "type": "array",
                        "title": "Answers"
                    },
                    "submitted_answers": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MultiChoiceAnswer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Submitted Answers"
                    }
                },
                "type": "object",
                "required": [
                    "choices",
                    "display",
                    "answers"
                ],
                "title": "AnswerMultiChoice"
            },
            "AnswerPairing-Input": {
                "properties": {
                    "time_limit": {
                        "type": "integer",
                        "title": "Time Limit",
                        "default": 0
                    },
                    "pairs": {
                        "items": {
                            "$ref": "#/components/schemas/PairingOption"
                        },
                        "type": "array",
                        "title": "Pairs"
                    },
                    "randomize": {
                        "type": "boolean",
                        "title": "Randomize",
                        "description": "If the choices should be placed randomized",
                        "default": true
                    },
                    "display": {
                        "$ref": "#/components/schemas/MultiChoiceDisplay"
                    },
                    "submitted_pairs": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PairingOption"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Submitted Pairs"
                    }
                },
                "type": "object",
                "required": [
                    "pairs",
                    "display"
                ],
                "title": "AnswerPairing"
            },
            "AnswerPairing-Output": {
                "properties": {
                    "time_limit": {
                        "type": "integer",
                        "title": "Time Limit",
                        "default": 0
                    },
                    "pairs": {
                        "items": {
                            "$ref": "#/components/schemas/PairingOption"
                        },
                        "type": "array",
                        "title": "Pairs"
                    },
                    "randomize": {
                        "type": "boolean",
                        "title": "Randomize",
                        "description": "If the choices should be placed randomized",
                        "default": true
                    },
                    "display": {
                        "$ref": "#/components/schemas/MultiChoiceDisplay"
                    },
                    "submitted_pairs": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PairingOption"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Submitted Pairs"
                    }
                },
                "type": "object",
                "required": [
                    "pairs",
                    "display"
                ],
                "title": "AnswerPairing"
            },
            "AnswerType": {
                "type": "string",
                "enum": [
                    "mcq",
                    "writing",
                    "pairing"
                ],
                "title": "AnswerType"
            },
            "AuthTemplateResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "user_id",
                    "username"
                ],
                "title": "AuthTemplateResponse"
            },
            "Body_upload_file_testing_check_answer_post": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "image": {
                        "type": "string",
                        "format": "binary",
                        "title": "Image"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "text",
                    "image"
                ],
                "title": "Body_upload_file_testing_check_answer_post"
            },
            "CheckHandwriteAnswerResponse": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "filename": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "content_type": {
                        "type": "string",
                        "title": "Content Type"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "filename",
                    "content_type",
                    "size"
                ],
                "title": "CheckHandwriteAnswerResponse"
            },
            "DailyAdventureTaskContent": {
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": "每日任務: 完成一次冒險探索"
                    }
                },
                "type": "object",
                "title": "DailyAdventureTaskContent"
            },
            "FlagQuestionRequest": {
                "properties": {
                    "question_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Question Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes"
                    }
                },
                "type": "object",
                "required": [
                    "question_id",
                    "user_id"
                ],
                "title": "FlagQuestionRequest"
            },
            "FlagQuestionResponse": {
                "properties": {
                    "flag_id": {
                        "type": "string",
                        "title": "Flag Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/FlaggedQuestionStatus"
                    }
                },
                "type": "object",
                "required": [
                    "flag_id",
                    "status"
                ],
                "title": "FlagQuestionResponse"
            },
            "FlaggedQuestionStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "reviewed",
                    "rejected",
                    "resolved",
                    "error"
                ],
                "title": "FlaggedQuestionStatus"
            },
            "GameData": {
                "properties": {
                    "game_id": {
                        "type": "string",
                        "title": "Game Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At",
                        "description": "Unix timestamp in seconds"
                    },
                    "earned_exp": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Earned Exp",
                        "default": 0
                    },
                    "time_spent": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Time Spent",
                        "default": 0
                    },
                    "total_score": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Total Score",
                        "default": 0
                    },
                    "question_count": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Question Count",
                        "default": 0
                    },
                    "remaining_hearts": {
                        "type": "integer",
                        "title": "Remaining Hearts",
                        "default": 3
                    },
                    "correct_count": {
                        "type": "integer",
                        "title": "Correct Count"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "correct_count"
                ],
                "title": "GameData"
            },
            "GameObject-Input": {
                "properties": {
                    "questions": {
                        "items": {
                            "$ref": "#/components/schemas/QuestionBase-Input"
                        },
                        "type": "array",
                        "title": "Questions"
                    },
                    "generated_at": {
                        "type": "integer",
                        "title": "Generated At",
                        "description": "Unix timestamp in seconds",
                        "default": 1750844714
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "game_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Game Id"
                    }
                },
                "type": "object",
                "required": [
                    "questions",
                    "user_id",
                    "game_id"
                ],
                "title": "GameObject"
            },
            "GameObject-Output": {
                "properties": {
                    "questions": {
                        "items": {
                            "$ref": "#/components/schemas/QuestionBase-Output"
                        },
                        "type": "array",
                        "title": "Questions"
                    },
                    "generated_at": {
                        "type": "integer",
                        "title": "Generated At",
                        "description": "Unix timestamp in seconds",
                        "default": 1750844714
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "game_id": {
                        "type": "string",
                        "title": "Game Id"
                    }
                },
                "type": "object",
                "required": [
                    "questions",
                    "user_id",
                    "game_id"
                ],
                "title": "GameObject"
            },
            "GetPastWrongWordsByUserResponse": {
                "properties": {
                    "word_id": {
                        "type": "integer",
                        "title": "Word Id",
                        "description": "Unicode code point of a character"
                    },
                    "word": {
                        "type": "string",
                        "title": "Word"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Url"
                    },
                    "pronunciation_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pronunciation Url"
                    },
                    "strokes_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Strokes Url"
                    },
                    "wrong_count": {
                        "type": "integer",
                        "title": "Wrong Count"
                    },
                    "wrong_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Wrong Image Url"
                    },
                    "last_wrong_at": {
                        "type": "integer",
                        "title": "Last Wrong At",
                        "description": "Unix timestamp in seconds"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At",
                        "description": "Unix timestamp in seconds"
                    }
                },
                "type": "object",
                "required": [
                    "word_id",
                    "word",
                    "wrong_count",
                    "last_wrong_at",
                    "created_at"
                ],
                "title": "GetPastWrongWordsByUserResponse"
            },
            "GetUserWrongWordsResponse": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/GetPastWrongWordsByUserResponse"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size"
                    },
                    "count": {
                        "type": "integer",
                        "title": "Count"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "page",
                    "page_size",
                    "count"
                ],
                "title": "GetUserWrongWordsResponse"
            },
            "GivenMaterialType": {
                "type": "string",
                "enum": [
                    "text_long",
                    "text_short",
                    "image",
                    "sound"
                ],
                "title": "GivenMaterialType"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LoginRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "MCQDisplayType": {
                "type": "string",
                "enum": [
                    "grid",
                    "list"
                ],
                "title": "MCQDisplayType"
            },
            "MultiChoiceAnswer": {
                "properties": {
                    "answer_id": {
                        "type": "integer",
                        "title": "Answer Id"
                    },
                    "choices": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Choices"
                    }
                },
                "type": "object",
                "required": [
                    "answer_id",
                    "choices"
                ],
                "title": "MultiChoiceAnswer"
            },
            "MultiChoiceDisplay": {
                "properties": {
                    "display_type": {
                        "$ref": "#/components/schemas/MCQDisplayType"
                    },
                    "rows": {
                        "type": "integer",
                        "title": "Rows"
                    },
                    "columns": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Columns"
                    }
                },
                "type": "object",
                "required": [
                    "display_type",
                    "rows"
                ],
                "title": "MultiChoiceDisplay"
            },
            "MultiChoiceOption": {
                "properties": {
                    "option_id": {
                        "type": "integer",
                        "title": "Option Id"
                    },
                    "text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Text"
                    },
                    "image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image"
                    }
                },
                "type": "object",
                "required": [
                    "option_id"
                ],
                "title": "MultiChoiceOption"
            },
            "PairingOption": {
                "properties": {
                    "pair_id": {
                        "type": "integer",
                        "title": "Pair Id"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/MultiChoiceOption"
                        },
                        "type": "array",
                        "title": "Items"
                    }
                },
                "type": "object",
                "required": [
                    "pair_id",
                    "items"
                ],
                "title": "PairingOption"
            },
            "PastWrongWord": {
                "properties": {
                    "item_id": {
                        "type": "string",
                        "title": "Item Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "word_id": {
                        "type": "integer",
                        "title": "Word Id",
                        "description": "Unicode code point of a character"
                    },
                    "wrong_count": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Wrong Count",
                        "default": 1
                    },
                    "wrong_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Wrong Image Url"
                    },
                    "last_wrong_at": {
                        "type": "integer",
                        "title": "Last Wrong At",
                        "description": "Unix timestamp in seconds"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "word_id"
                ],
                "title": "PastWrongWord"
            },
            "QuestionBase-Input": {
                "properties": {
                    "question_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Question Id"
                    },
                    "question_type": {
                        "$ref": "#/components/schemas/QuestionType"
                    },
                    "answer_type": {
                        "$ref": "#/components/schemas/AnswerType"
                    },
                    "exp": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Exp",
                        "description": "Experience points awarded for answering correctly",
                        "default": 10
                    },
                    "target_word": {
                        "type": "string",
                        "title": "Target Word"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "given": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/givenMaterial"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Given"
                    },
                    "mcq": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnswerMultiChoice-Input"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pairing": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnswerPairing-Input"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "writing": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnswerHandwrite"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "question_type",
                    "answer_type",
                    "target_word",
                    "prompt"
                ],
                "title": "QuestionBase"
            },
            "QuestionBase-Output": {
                "properties": {
                    "question_id": {
                        "type": "string",
                        "title": "Question Id"
                    },
                    "question_type": {
                        "$ref": "#/components/schemas/QuestionType"
                    },
                    "answer_type": {
                        "$ref": "#/components/schemas/AnswerType"
                    },
                    "exp": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Exp",
                        "description": "Experience points awarded for answering correctly",
                        "default": 10
                    },
                    "target_word": {
                        "type": "string",
                        "title": "Target Word"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "given": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/givenMaterial"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Given"
                    },
                    "mcq": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnswerMultiChoice-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pairing": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnswerPairing-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "writing": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnswerHandwrite"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "question_type",
                    "answer_type",
                    "target_word",
                    "prompt"
                ],
                "title": "QuestionBase"
            },
            "QuestionType": {
                "type": "string",
                "enum": [
                    "pairing_cards",
                    "match_pic",
                    "combine_radical",
                    "combine_radical_with_hint",
                    "fill_in_sentence",
                    "listening",
                    "fill_in_vocab",
                    "ident_mirrored",
                    "ident_wrong",
                    "copy_stroke",
                    "fill_in_radical"
                ],
                "title": "QuestionType"
            },
            "RegisterUserRequest": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "email"
                ],
                "title": "RegisterUserRequest"
            },
            "SetTaskProgressRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Task Id"
                    },
                    "progress": {
                        "type": "integer",
                        "title": "Progress"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "task_id",
                    "progress"
                ],
                "title": "SetTaskProgressRequest"
            },
            "SetTaskProgressResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "granted_exp": {
                        "type": "integer",
                        "title": "Granted Exp",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "SetTaskProgressResponse"
            },
            "Task": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "task_class": {
                        "$ref": "#/components/schemas/TaskClassTypes",
                        "default": "daily"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TaskTypeTypes",
                        "default": "daily_adventure"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At",
                        "description": "Unix timestamp in seconds"
                    },
                    "until": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Unix timestamp in seconds"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Until"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatus",
                        "default": "ongoing"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "default": "每日任務"
                    },
                    "content": {
                        "$ref": "#/components/schemas/DailyAdventureTaskContent"
                    },
                    "priority": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Priority",
                        "default": 50
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "description": "Unix timestamp in seconds"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At"
                    },
                    "exp": {
                        "type": "integer",
                        "title": "Exp",
                        "default": 10
                    },
                    "target": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Target"
                    },
                    "progress": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Progress"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "content"
                ],
                "title": "Task"
            },
            "TaskClassTypes": {
                "type": "string",
                "enum": [
                    "daily",
                    "world"
                ],
                "title": "TaskClassTypes"
            },
            "TaskStatus": {
                "type": "string",
                "enum": [
                    "ongoing",
                    "completed",
                    "abandoned"
                ],
                "title": "TaskStatus"
            },
            "TaskTypeTypes": {
                "type": "string",
                "enum": [
                    "daily_adventure",
                    "world_quest"
                ],
                "title": "TaskTypeTypes"
            },
            "UpdateUserSettingsRequest": {
                "properties": {
                    "language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Language"
                    },
                    "theme": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Theme"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings"
                    }
                },
                "type": "object",
                "title": "UpdateUserSettingsRequest"
            },
            "User": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "email": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                        "title": "Email",
                        "description": "User's email address, must be a valid email format."
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "title": "Name",
                        "description": "User's name, up to 100 characters."
                    },
                    "level": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Level",
                        "default": 1
                    },
                    "exp": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Exp",
                        "default": 0
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At",
                        "description": "Unix timestamp in seconds"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "name"
                ],
                "title": "User"
            },
            "UserSettings": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "User Id"
                    },
                    "updated_at": {
                        "type": "integer",
                        "title": "Updated At"
                    },
                    "language": {
                        "type": "string",
                        "title": "Language",
                        "default": "zh-hk"
                    },
                    "theme": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Theme"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "updated_at"
                ],
                "title": "UserSettings"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "condensedUser": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "level": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Level"
                    },
                    "exp": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Exp"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "name",
                    "level",
                    "exp"
                ],
                "title": "condensedUser"
            },
            "givenMaterial": {
                "properties": {
                    "material_type": {
                        "$ref": "#/components/schemas/GivenMaterialType"
                    },
                    "material_id": {
                        "type": "integer",
                        "title": "Material Id"
                    },
                    "image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Url"
                    },
                    "alt_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Alt Text"
                    },
                    "sound_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sound Url"
                    },
                    "text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Text"
                    }
                },
                "type": "object",
                "required": [
                    "material_type",
                    "material_id"
                ],
                "title": "givenMaterial"
            }
        }
    }
}